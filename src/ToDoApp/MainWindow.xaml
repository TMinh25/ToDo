<Window x:Class="ToDoApp.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:local="clr-namespace:ToDoApp" xmlns:cv="clr-namespace:ToDoApp.Converters" mc:Ignorable="d" Title="ToDo" Height="600" Width="1000" WindowStyle="None" WindowStartupLocation="CenterScreen" AllowsTransparency="True" ResizeMode="CanResizeWithGrip" MinWidth="750" MinHeight="350" Icon="Assets/Images/logo.ico">
    <Window.Resources>
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border" Background="WhiteSmoke" BorderThickness="1" Margin="0,0,40,40" BorderBrush="LightGray" CornerRadius="6">
                            <Border.Effect>
                                <DropShadowEffect Color="LightGray" />
                            </Border.Effect>
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                                <Setter TargetName="Border" Property="CornerRadius" Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}" x:Key="CheckboxStyle">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="checkboxImage" Source="Assets/Images/checkBoxOff.png" Width="32" />
                            <ContentPresenter />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="Assets/Images/checkBoxOn.png" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="Assets/Images/checkBoxHover.png" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}" x:Key="StarCheckboxStyle">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="checkboxImage" Source="Assets/Images/starInactive.png" Width="16" />
                            <ContentPresenter />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="Assets/Images/starActive.png" />
                                <Setter TargetName="checkboxImage" Property="Width" Value="24" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="Assets/Images/starHover.png" />
                                <Setter TargetName="checkboxImage" Property="Width" Value="24" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="0 2 0 0" />
            <Setter Property="FontSize" Value="26" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Border x:Name="border" BorderBrush="Red" BorderThickness="0" SnapsToDevicePixels="True" />
                            <Border x:Name="bd2" />
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="True">
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F7F7F7" TargetName="border" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="Foreground" Value="{Binding BackColor}" />
                                <Setter Property="BorderThickness" Value="4 0 0 0" TargetName="bd2" />
                                <Setter Property="BorderBrush" Value="{Binding BackColor}" TargetName="bd2" />
                                <Setter Property="Background" Value="{Binding BackColor}" TargetName="border" />
                                <Setter Property="Opacity" Value="0.05" TargetName="border" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="MinHeight" Value="44" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
        <cv:DisplayConverters x:Key="discv" />
        <cv:DisplayMultiConverters x:Key="dismulti" />
        <ControlTemplate x:Key="ViewerScrollBar" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="True" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" />
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type Button}" x:Key="ButtonHid">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="280" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid>
            <DockPanel>
                <TextBlock DockPanel.Dock="Top" Text="ToDo" Foreground="#8F8F8F" FontSize="13" Margin="15 15 0 20" />
                <!--avatar and user name-->
                <Button DockPanel.Dock="Top" Margin="10 0 10 10" Style="{StaticResource ButtonHid}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                            <Ellipse Margin="0,0,8,0" Height="35" Width="35" HorizontalAlignment="Center">
                                <Ellipse.Fill>
                                    <ImageBrush Stretch="UniformToFill" x:Name="imgDisplayImage" ImageSource="{Binding CurrentUser.displayImage}" />
                                </Ellipse.Fill>
                            </Ellipse>
                            <TextBlock Name="txtDisplayName" Text="{Binding CurrentUser.displayName}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                        </StackPanel>
                    </Button.Content>
                    <Button.ContextMenu>
                        <ContextMenu>
                            <!--<MenuItem Header="Cài Đặt" />-->
                            <!--<Separator />-->
                            <MenuItem Click="MenuItemSignOut_Click" Header="Đăng Xuất" />
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
                <ListBox DockPanel.Dock="Top" ItemsSource="{Binding MenuModels}" SelectedItem="{Binding MenuModel}" BorderThickness="0">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="BorderThickness" Value="0 0 0 1" />
                            <Setter Property="BorderBrush" Value="black" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Grid>
                                            <Border Name="border" />
                                            <ContentPresenter />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <RadioButton GroupName="TaskMenu" HorizontalAlignment="Stretch" Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:MainWindow}},
                                Path=DataContext.SelectedCommand,Mode=TwoWay}" Style="{DynamicResource RadioButtonStyle}" CommandParameter="{Binding}">
                                <RadioButton.IsChecked>
                                    <Binding Path="IsSelected" RelativeSource="{RelativeSource AncestorType=ListBoxItem}" Mode="TwoWay" />
                                </RadioButton.IsChecked>

                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50" />
                                        <ColumnDefinition Width="160" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding IconFont}" FontFamily="./Assets/Fonts/#iconfont" FontSize="22" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <TextBlock Grid.Column="1" Text="{Binding Title}" VerticalAlignment="Center" FontSize="14" Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, 
                                        AncestorType={x:Type RadioButton}}}" />
                                    <!-- TaskInfos.Count -->
                                    <!--đếm số lượng task của từng tab-->
                                    <TextBlock Grid.Column="2" Foreground="Black" Text="{Binding TaskInfos.Count}" FontSize="15" Margin="0,0,10,0" HorizontalAlignment="Right" VerticalAlignment="Center" />
                                </Grid>
                            </RadioButton>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <Button Click="CreateNewCustomMenu_Click" DockPanel.Dock="Top" Style="{StaticResource ButtonHid}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                <Setter Property="Background" Value="#F7F7F7" />
                                <Setter Property="MinHeight" Value="44" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#F0F0F0"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="160" />
                            <ColumnDefinition Width="50" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="➕" FontFamily="./Assets/Fonts/#iconfont" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <TextBlock x:Name="btnText" Grid.Column="1" Text="Thêm Danh Sách Mới" VerticalAlignment="Center" FontSize="14" Foreground="Black" />
                    </Grid>
                </Button>
                <ListBox DockPanel.Dock="Top" ItemsSource="{Binding CustomMenuModels}" SelectedItem="{Binding MenuModel}" BorderThickness="0" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Grid>
                                            <Border Name="border" />
                                            <ContentPresenter />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource ButtonHid}">
                                <Button.Content>
                                    <RadioButton GroupName="TaskMenu" HorizontalAlignment="Stretch" Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:MainWindow}},
                                Path=DataContext.SelectedCommand,Mode=TwoWay}" Style="{DynamicResource RadioButtonStyle}" CommandParameter="{Binding}">
                                        <RadioButton.IsChecked>
                                            <Binding Path="IsSelected" RelativeSource="{RelativeSource AncestorType=ListBoxItem}" Mode="TwoWay" />
                                        </RadioButton.IsChecked>
                                        <Grid HorizontalAlignment="Stretch">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50" />
                                                <ColumnDefinition Width="160" />
                                                <ColumnDefinition Width="50" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="{Binding IconFont}" FontFamily="./Assets/Fonts/#iconfont" FontSize="22" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            <TextBlock Grid.Column="1" Text="{Binding Title}" VerticalAlignment="Center" FontSize="14" Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, 
                                        AncestorType={x:Type RadioButton}}}" />
                                            <!-- TaskInfos.Count -->
                                            <!--đếm số lượng task của từng tab-->
                                            <TextBlock Grid.Column="2" Foreground="Black" Text="{Binding TaskInfos.Count}" FontSize="15" Margin="0,0,10,0" HorizontalAlignment="Right" VerticalAlignment="Center" />
                                        </Grid>
                                    </RadioButton>
                                </Button.Content>
                                <Button.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Tag="{Binding ModifyTag}" Click="UpdateCustomMenuItem_Click" Header="Chỉnh Sửa" />
                                        <MenuItem Tag="{Binding ID}" Click="DeleteCustomMenuItem_Click" Header="Xóa" />
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </Grid>

        <Grid Name="grc" Grid.Column="1" Background="{Binding MenuModel.BackColor}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="70" />
                <RowDefinition />
                <RowDefinition Height="90" />
            </Grid.RowDefinitions>

            <StackPanel Panel.ZIndex="1" Orientation="Horizontal" HorizontalAlignment="Right" Grid.ColumnSpan="2">
                <Button Name="btnMinimize" Click="btnMinClick" Width="45" Height="30" Content="─" Foreground="White" BorderThickness="0" Background="Transparent" />
                <Button Name="btnMaximize" Click="btnMaxClick" Width="45" Height="30" Content="☐" Foreground="White" BorderThickness="0" Background="Transparent" />
                <Button Name="btnClose" Click="btnCloseClick" Width="45" Height="30" Content="✕" Foreground="White" BorderThickness="0" Background="Transparent" />
            </StackPanel>

            <Grid Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Margin="30 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width=".4*"/>
                </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Name="ico" Text="{Binding MenuModel.IconFont}" Visibility="{Binding MenuModel.Display,Converter={StaticResource discv}}" FontFamily="./Assets/Fonts/#iconfont" VerticalAlignment="Center" Foreground="White" FontSize="40" />
                        <TextBlock Name="tit" Text="{Binding MenuModel.Title}" Margin="5 0 0 0" VerticalAlignment="Center" Foreground="White" FontWeight="Bold" FontSize="30" />
                    </StackPanel>
                <TextBlock FontSize="15" Foreground="White" Margin="5 0 0 0" VerticalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource dismulti}">
                            <Binding Path="Visibility" ElementName="ico" />
                            <Binding Path="Text" ElementName="tit" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <Border Grid.Column="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock x:Name="btnSearch" MouseDown="btnAddTask_MouseDown" Cursor="Hand" FontFamily="./Assets/Fonts/#iconfont" Text="&#xe64b;" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" Foreground="White" />

                        <TextBox Name="txtSearch" Grid.Column="1" TextChanged="SearchText_TextChanged">
                            <TextBox.Resources>
                                <VisualBrush x:Key="hinttext" TileMode="None" AlignmentX="Left" Stretch="None">
                                    <VisualBrush.Visual>
                                        <TextBlock FontStyle="Normal" Text="Tìm Kiếm" />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </TextBox.Resources>

                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="FontSize" Value="14" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="">
                                            <Setter Property="Background" Value="{StaticResource hinttext}" />
                                        </Trigger>

                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter Property="Background" Value="{StaticResource hinttext}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </Border>
            </Grid>

            <Grid Grid.Row="2">
                <ScrollViewer Template="{StaticResource ViewerScrollBar}">
                    <ItemsControl ItemsSource="{Binding MenuModel.TaskInfos}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Style="{StaticResource ButtonHid}">
                                    <Border Tag="{Binding IsStatusDone}" Name="border" CornerRadius="3" Margin="40 2 40 0" VerticalAlignment="Center" Height="50">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50" />
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="50" />
                                            </Grid.ColumnDefinitions>
                                            <CheckBox Grid.Column="0" Tag="{Binding BooleanField}" IsChecked="{Binding IsStatusDone}" Checked="CheckBox_CheckedChanged" Unchecked="CheckBox_CheckedChanged" Style="{StaticResource CheckboxStyle}"></CheckBox>
                                            <Grid Grid.Column="1" VerticalAlignment="Center">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="2*"/>
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Row="0" Text="{Binding Content}" Foreground="Black" />
                                                <TextBlock Grid.Row="1" Text="{Binding TimeString}" Foreground="#666" />
                                                <TextBlock Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Text="{Binding Category}" VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="#666" />
                                            </Grid>
                                            <CheckBox Grid.Column="2" Tag="{Binding BooleanField}" IsChecked="{Binding IsImportant}" Checked="CheckBoxImportant_CheckedChanged" Unchecked="CheckBoxImportant_CheckedChanged" Style="{StaticResource StarCheckboxStyle}"></CheckBox>
                                        </Grid>

                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsStatusDone}" Value="True">
                                                        <Setter Property="Background" Value="Red" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#F3F3F3" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter Property="Background" Value="White" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Tag="{Binding BindingCommand}" Click="UpdateTask_Click" Header="Sửa" />
                                            <Separator />
                                            <MenuItem Tag="{Binding Id}" Click="DeleteTask_Click" Header="Xóa" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>

            <Border Grid.Row="3" Background="Black" Opacity="0.1" CornerRadius="5" Margin="40 0 40 30" />
            <Border Grid.Row="3" Margin="40 0 40 30">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock x:Name="btnAddTask" MouseDown="btnAddTask_MouseDown" Cursor="Hand" Text="➕" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15" Foreground="White" />

                    <TextBox Name="inputText" Grid.Column="1" KeyDown="TextBox_KeyDown">
                        <TextBox.Resources>
                            <VisualBrush x:Key="hinttext" TileMode="None" AlignmentX="Left" Stretch="None">
                                <VisualBrush.Visual>
                                    <TextBlock FontStyle="Normal" Text="Thêm một việc mới" />
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </TextBox.Resources>

                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="">
                                        <Setter Property="Background" Value="{StaticResource hinttext}" />
                                    </Trigger>

                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Background" Value="{StaticResource hinttext}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>